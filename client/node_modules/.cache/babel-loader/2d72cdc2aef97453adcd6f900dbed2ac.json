{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/real-time-react/client/src/App.js\";\nimport React, { Component, useRef, useEffect, useState } from 'react';\nimport { PixelEditor, Pencil } from '@curtishughes/pixel-editor';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.syncUpdates = () => {\n      const data = { ...this.state\n      };\n      axios.post(\"/update-editor\", data).catch(console.error);\n    };\n\n    this.state = {\n      id: '',\n      editorRef: useRef(null),\n      editor: null\n    };\n    this.iframe = React.createRef();\n    this.pusher = new Pusher(\"8367995d3f0fa627b261\", {\n      cluster: \"us3\",\n      forceTLS: true\n    });\n    this.channel = this.pusher.subscribe(\"editor\");\n  }\n\n  componentDidMount() {\n    if (this.state.editorRef.current) {\n      this.setState({\n        editor: new PixelEditor(this.state.editorRef.current, 64, 64, new Pencil('black'))\n      });\n    }\n\n    this.setState({\n      id: pushid()\n    });\n    this.channel.bind(\"code-update\", data => {\n      const {\n        id\n      } = this.state;\n      if (data.id === id) return;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"canvas\", {\n      onBeforeChange: html => {\n        this.setState({\n          html\n        }, () => this.syncUpdates());\n      },\n      ref: this.state.editorRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.tool = new Pencil();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Eraser\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.tool = new Pencil('black');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Pencil\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.undo();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Undo\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.redo();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Redo\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/real-time-react/client/src/App.js"],"names":["React","Component","useRef","useEffect","useState","PixelEditor","Pencil","Pusher","pushid","axios","App","constructor","syncUpdates","data","state","post","catch","console","error","id","editorRef","editor","iframe","createRef","pusher","cluster","forceTLS","channel","subscribe","componentDidMount","current","setState","bind","render","html","tool","undo","redo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,4BAApC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AACxBU,EAAAA,WAAW,GAAG;AACV;;AADU,SA8BdC,WA9Bc,GA8BA,MAAM;AAChB,YAAMC,IAAI,GAAG,EAAE,GAAG,KAAKC;AAAV,OAAb;AACAL,MAAAA,KAAK,CACJM,IADD,CACM,gBADN,EACwBF,IADxB,EAECG,KAFD,CAEOC,OAAO,CAACC,KAFf;AAGH,KAnCa;;AAEV,SAAKJ,KAAL,GAAa;AACXK,MAAAA,EAAE,EAAE,EADO;AAEXC,MAAAA,SAAS,EAAGlB,MAAM,CAAC,IAAD,CAFP;AAGXmB,MAAAA,MAAM,EAAG;AAHE,KAAb;AAKA,SAAKC,MAAL,GAActB,KAAK,CAACuB,SAAN,EAAd;AACA,SAAKC,MAAL,GAAc,IAAIjB,MAAJ,CAAW,sBAAX,EAAmC;AAC/CkB,MAAAA,OAAO,EAAE,KADsC;AAE/CC,MAAAA,QAAQ,EAAE;AAFqC,KAAnC,CAAd;AAKA,SAAKC,OAAL,GAAe,KAAKH,MAAL,CAAYI,SAAZ,CAAsB,QAAtB,CAAf;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKf,KAAL,CAAWM,SAAX,CAAqBU,OAAzB,EAAkC;AAC9B,WAAKC,QAAL,CAAc;AACVV,QAAAA,MAAM,EAAG,IAAIhB,WAAJ,CAAgB,KAAKS,KAAL,CAAWM,SAAX,CAAqBU,OAArC,EAA8C,EAA9C,EAAkD,EAAlD,EAAsD,IAAIxB,MAAJ,CAAW,OAAX,CAAtD;AADC,OAAd;AAGH;;AACD,SAAKyB,QAAL,CAAc;AACZZ,MAAAA,EAAE,EAAEX,MAAM;AADE,KAAd;AAIA,SAAKmB,OAAL,CAAaK,IAAb,CAAkB,aAAlB,EAAiCnB,IAAI,IAAI;AACvC,YAAM;AAAEM,QAAAA;AAAF,UAAS,KAAKL,KAApB;AACA,UAAID,IAAI,CAACM,EAAL,KAAYA,EAAhB,EAAoB;AACrB,KAHD;AAID;;AAOHc,EAAAA,MAAM,GAAG;AACL,wBACI,uDACI;AAAQ,MAAA,cAAc,EAAGC,IAAD,IAAU;AAClC,aAAKH,QAAL,CAAc;AAAEG,UAAAA;AAAF,SAAd,EAAwB,MAAM,KAAKtB,WAAL,EAA9B;AACC,OAFD;AAEG,MAAA,GAAG,EAAE,KAAKE,KAAL,CAAWM,SAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,YAAIC,MAAJ,EAAYA,MAAM,CAACc,IAAP,GAAc,IAAI7B,MAAJ,EAAd;AAA4B,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,YAAIe,MAAJ,EAAYA,MAAM,CAACc,IAAP,GAAc,IAAI7B,MAAJ,CAAW,OAAX,CAAd;AAAmC,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,YAAIe,MAAJ,EAAYA,MAAM,CAACe,IAAP;AAAe,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,YAAIf,MAAJ,EAAYA,MAAM,CAACgB,IAAP;AAAe,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CADJ;AAWH;;AAjDuB;;AAoD5B,eAAe3B,GAAf","sourcesContent":["import React, { Component, useRef, useEffect, useState } from 'react';\nimport { PixelEditor, Pencil } from '@curtishughes/pixel-editor';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\n \nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n          id: '',\n          editorRef : useRef(null),\n          editor : null,\n        };\n        this.iframe = React.createRef();\n        this.pusher = new Pusher(\"8367995d3f0fa627b261\", {\n          cluster: \"us3\",\n          forceTLS: true\n        });\n    \n        this.channel = this.pusher.subscribe(\"editor\");\n    }\n    componentDidMount() {\n        if (this.state.editorRef.current) {\n            this.setState({\n                editor : new PixelEditor(this.state.editorRef.current, 64, 64, new Pencil('black')),\n            }) \n        }\n        this.setState({\n          id: pushid(),\n        });\n    \n        this.channel.bind(\"code-update\", data => {\n          const { id } = this.state;\n          if (data.id === id) return;\n        });\n      }\n    syncUpdates = () => {\n        const data = { ...this.state };\n        axios\n        .post(\"/update-editor\", data)\n        .catch(console.error);\n    };\n    render() {\n        return (\n            <>\n                <canvas onBeforeChange={(html) => {\n                this.setState({ html }, () => this.syncUpdates());\n                }} ref={this.state.editorRef} />\n                <button onClick={() => { if (editor) editor.tool = new Pencil() }}>Eraser</button>\n                <button onClick={() => { if (editor) editor.tool = new Pencil('black') }}>Pencil</button>\n                <button onClick={() => { if (editor) editor.undo() }}>Undo</button>\n                <button onClick={() => { if (editor) editor.redo() }}>Redo</button>\n            </>\n        );\n    }\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}