{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/real-time-react/client/src/App.js\";\nimport React, { Component, useRef, useEffect, useState } from 'react';\nimport { PixelEditor, Pencil } from '@curtishughes/pixel-editor';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\nimport CircularJSON from 'circular-json';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.syncUpdates = async () => {\n      const data = { ...this.state\n      };\n      axios.post(\"/update-editor\", data).then(response => {\n        let json = CircularJSON.stringify(response);\n        res.send(json);\n      });\n    };\n\n    this.state = {\n      id: '',\n      editor: null\n    };\n    this.editorRef = React.createRef();\n    this.pusher = new Pusher(\"8367995d3f0fa627b261\", {\n      cluster: \"us3\",\n      forceTLS: true\n    });\n    this.channel = this.pusher.subscribe(\"editor\");\n  }\n\n  componentDidMount() {\n    if (this.editorRef.current) {\n      this.setState({\n        editor: new PixelEditor(this.editorRef.current, 64, 64, new Pencil('black'))\n      });\n    }\n\n    this.setState({\n      id: pushid()\n    });\n    this.channel.bind(\"code-update\", data => {\n      const {\n        id\n      } = this.state;\n      if (data.id === id) return;\n      this.setState({\n        editor: data.editor\n      });\n    });\n  }\n\n  render() {\n    const {\n      editor\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"canvas\", {\n      onClick: () => {\n        this.syncUpdates();\n      },\n      ref: this.editorRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.tool = new Pencil();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Eraser\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.tool = new Pencil('black');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Pencil\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.undo();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Undo\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.redo();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Redo\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/real-time-react/client/src/App.js"],"names":["React","Component","useRef","useEffect","useState","PixelEditor","Pencil","Pusher","pushid","axios","CircularJSON","App","constructor","syncUpdates","data","state","post","then","response","json","stringify","res","send","id","editor","editorRef","createRef","pusher","cluster","forceTLS","channel","subscribe","componentDidMount","current","setState","bind","render","tool","undo","redo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,4BAApC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AACxBW,EAAAA,WAAW,GAAG;AACV;;AADU,SAgCdC,WAhCc,GAgCA,YAAW;AAErB,YAAMC,IAAI,GAAG,EAAE,GAAG,KAAKC;AAAV,OAAb;AACAN,MAAAA,KAAK,CACJO,IADD,CACM,gBADN,EACwBF,IADxB,EAECG,IAFD,CAEOC,QAAD,IAAc;AAChB,YAAIC,IAAI,GAAGT,YAAY,CAACU,SAAb,CAAuBF,QAAvB,CAAX;AACAG,QAAAA,GAAG,CAACC,IAAJ,CAASH,IAAT;AACH,OALD;AAMH,KAzCa;;AAEV,SAAKJ,KAAL,GAAa;AACXQ,MAAAA,EAAE,EAAE,EADO;AAEXC,MAAAA,MAAM,EAAG;AAFE,KAAb;AAIA,SAAKC,SAAL,GAAiBzB,KAAK,CAAC0B,SAAN,EAAjB;AACA,SAAKC,MAAL,GAAc,IAAIpB,MAAJ,CAAW,sBAAX,EAAmC;AAC/CqB,MAAAA,OAAO,EAAE,KADsC;AAE/CC,MAAAA,QAAQ,EAAE;AAFqC,KAAnC,CAAd;AAIA,SAAKC,OAAL,GAAe,KAAKH,MAAL,CAAYI,SAAZ,CAAsB,QAAtB,CAAf;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKP,SAAL,CAAeQ,OAAnB,EAA4B;AACxB,WAAKC,QAAL,CAAc;AACVV,QAAAA,MAAM,EAAG,IAAInB,WAAJ,CAAgB,KAAKoB,SAAL,CAAeQ,OAA/B,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,IAAI3B,MAAJ,CAAW,OAAX,CAAhD;AADC,OAAd;AAGH;;AACD,SAAK4B,QAAL,CAAc;AACZX,MAAAA,EAAE,EAAEf,MAAM;AADE,KAAd;AAIA,SAAKsB,OAAL,CAAaK,IAAb,CAAkB,aAAlB,EAAiCrB,IAAI,IAAI;AACvC,YAAM;AAAES,QAAAA;AAAF,UAAS,KAAKR,KAApB;AACA,UAAID,IAAI,CAACS,EAAL,KAAYA,EAAhB,EAAoB;AAEpB,WAAKW,QAAL,CAAc;AACZV,QAAAA,MAAM,EAAEV,IAAI,CAACU;AADD,OAAd;AAGD,KAPD;AAQH;;AAWDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEZ,MAAAA;AAAF,QAAa,KAAKT,KAAxB;AACA,wBACI,uDACA;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnB,aAAKF,WAAL;AACD,OAFH;AAEK,MAAA,GAAG,EAAE,KAAKY,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAII;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,YAAID,MAAJ,EAAYA,MAAM,CAACa,IAAP,GAAc,IAAI/B,MAAJ,EAAd;AAA4B,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,YAAIkB,MAAJ,EAAYA,MAAM,CAACa,IAAP,GAAc,IAAI/B,MAAJ,CAAW,OAAX,CAAd;AAAmC,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,YAAIkB,MAAJ,EAAYA,MAAM,CAACc,IAAP;AAAe,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,YAAId,MAAJ,EAAYA,MAAM,CAACe,IAAP;AAAe,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CADJ;AAWH;;AAxDuB;;AA2D5B,eAAe5B,GAAf","sourcesContent":["import React, { Component, useRef, useEffect, useState } from 'react';\nimport { PixelEditor, Pencil } from '@curtishughes/pixel-editor';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\nimport CircularJSON from 'circular-json';\n \nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n          id: '',\n          editor : null,\n        };\n        this.editorRef = React.createRef();\n        this.pusher = new Pusher(\"8367995d3f0fa627b261\", {\n          cluster: \"us3\",\n          forceTLS: true\n        });\n        this.channel = this.pusher.subscribe(\"editor\");\n    }\n    componentDidMount() {\n        if (this.editorRef.current) {\n            this.setState({\n                editor : new PixelEditor(this.editorRef.current, 64, 64, new Pencil('black')),\n            }) \n        }\n        this.setState({\n          id: pushid(),\n        });\n    \n        this.channel.bind(\"code-update\", data => {\n          const { id } = this.state;\n          if (data.id === id) return;\n\n          this.setState({\n            editor: data.editor,\n          });\n        });\n    }\n    syncUpdates = async() => {\n        \n        const data = { ...this.state };\n        axios\n        .post(\"/update-editor\", data)\n        .then((response) => {\n            let json = CircularJSON.stringify(response);\n            res.send(json);\n        });\n    };\n    render() {\n        const { editor } = this.state;\n        return (\n            <>\n            <canvas onClick={() => {\n                this.syncUpdates();\n              }} ref={this.editorRef} />\n                <button onClick={() => { if (editor) editor.tool = new Pencil() }}>Eraser</button>\n                <button onClick={() => { if (editor) editor.tool = new Pencil('black') }}>Pencil</button>\n                <button onClick={() => { if (editor) editor.undo() }}>Undo</button>\n                <button onClick={() => { if (editor) editor.redo() }}>Redo</button>\n            </>\n        );\n    }\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}