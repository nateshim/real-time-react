{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/pixit/client/src/PixelEditor.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Canvas from './Canvas';\nimport Pencil from './tools/Pencil';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\nimport { withStyles, createStyles } from '@material-ui/styles';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport ToolBox from './components/ToolBox';\nimport KeyboardEventHandlers from './components/KeyboardEventHandlers';\nimport pencilCursor from './static/pencil_cursor.png';\n\nconst PixelEditor = props => {\n  const classes = props.classes;\n  const [id, setId] = useState('');\n  const [currCursor, setCurrCursor] = useState(pencilCursor);\n  const [editor, setEditor] = useState(null);\n  const editorRef = useRef(null);\n  const pusher = new Pusher(\"8367995d3f0fa627b261\", {\n    cluster: \"us3\",\n    forceTLS: true\n  });\n  const channel = pusher.subscribe(\"editor\");\n  useEffect(() => {\n    if (editorRef.current) {\n      setEditor(new Canvas(editorRef.current, 64, 64, new Pencil('#000000')));\n    }\n\n    const interval = setInterval(() => {\n      console.log(\"hello\");\n      channel.bind(\"code-update\", data => {\n        if (data.id === id) return;\n        editor.clear();\n        editor.set(data.pixels);\n      });\n      const data = {\n        id: id,\n        pixels: editor ? editor.pixels : null\n      };\n      axios.post(\"/update-editor\", data).catch(err => {\n        console.log(err);\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const syncUpdates = () => {\n    channel.bind(\"code-update\", data => {\n      if (data.id === id) return;\n      editor.clear();\n      editor.set(data.pixels);\n    });\n    console.log(editor.pixels);\n    const data = {\n      id: id,\n      pixels: editor.pixels\n    };\n    axios.post(\"/update-editor\", data).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.backgroundContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardEventHandlers, {\n    editor: editor,\n    color: '#000000',\n    cursor: currCursor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ToolBox, {\n    editor: editor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: classes.canvasBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    style: {\n      cursor: `url(${currCursor}) 10 10, auto`\n    },\n    className: classes.canvas,\n    onClick: () => {\n      syncUpdates();\n    },\n    ref: editorRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst useStyles = theme => createStyles({\n  backgroundContainer: {\n    display: 'flex',\n    backgroundSize: 'cover',\n    background: theme.palette.primary.main,\n    overflowX: 'hidden'\n  },\n  canvasBox: {\n    justifyContent: 'center'\n  },\n  canvas: {\n    outline: 'black 3px solid',\n    marginTop: '1rem',\n    display: 'flex'\n  }\n});\n\nexport default withStyles(useStyles)(PixelEditor);","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/pixit/client/src/PixelEditor.js"],"names":["React","useState","useEffect","useRef","Canvas","Pencil","Pusher","pushid","axios","withStyles","createStyles","Box","Container","ToolBox","KeyboardEventHandlers","pencilCursor","PixelEditor","props","classes","id","setId","currCursor","setCurrCursor","editor","setEditor","editorRef","pusher","cluster","forceTLS","channel","subscribe","current","interval","setInterval","console","log","bind","data","clear","set","pixels","post","catch","err","clearInterval","syncUpdates","backgroundContainer","canvasBox","cursor","canvas","useStyles","theme","display","backgroundSize","background","palette","primary","main","overflowX","justifyContent","outline","marginTop"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport Canvas from './Canvas';\nimport Pencil from './tools/Pencil';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\nimport {withStyles, createStyles} from '@material-ui/styles';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport ToolBox from './components/ToolBox';\nimport KeyboardEventHandlers from './components/KeyboardEventHandlers';\nimport pencilCursor from './static/pencil_cursor.png'; \n\nconst PixelEditor = (props) => { \n  const classes = props.classes;\n  const [id, setId] = useState('');\n  const [currCursor, setCurrCursor] = useState(pencilCursor);\n  const [editor, setEditor] = useState(null);\n  const editorRef = useRef(null);\n  const pusher = new Pusher(\"8367995d3f0fa627b261\", {\n    cluster: \"us3\",\n    forceTLS: true\n  });\n  const channel = pusher.subscribe(\"editor\");\n  \n  useEffect(() => {\n    if (editorRef.current) {\n      setEditor(new Canvas(editorRef.current, 64, 64, new Pencil('#000000')));\n    }\n    const interval = setInterval(() => {\n      console.log(\"hello\");\n      channel.bind(\"code-update\", data => {\n        if (data.id === id) return;\n        editor.clear();\n        editor.set(data.pixels);\n      });\n      const data = { \n        id: id,\n        pixels: editor ? editor.pixels : null,\n      };\n      axios\n      .post(\"/update-editor\", data)\n      .catch(err => {\n        console.log(err);\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n    \n  const syncUpdates = () => {\n    channel.bind(\"code-update\", data => {\n      if (data.id === id) return;\n      editor.clear();\n      editor.set(data.pixels);\n    });\n    console.log(editor.pixels);\n    const data = { \n      id: id,\n      pixels: editor.pixels,\n    };\n    axios\n    .post(\"/update-editor\", data)\n    .catch(err => {\n      console.log(err);\n    });\n  };\n\n  return (\n    <Box className={classes.backgroundContainer}>\n      <KeyboardEventHandlers editor={editor} color={'#000000'} cursor={currCursor}/>\n      <ToolBox editor={editor}/>\n      <Container className={classes.canvasBox}>\n        <canvas style={{cursor: `url(${currCursor}) 10 10, auto`}} className={classes.canvas} onClick={() => {\n          syncUpdates();\n          }} ref={editorRef} />\n      </Container>\n    </Box>\n    );\n}\n\nconst useStyles = (theme) => createStyles({\n  backgroundContainer: {\n    display: 'flex',\n    backgroundSize: 'cover',\n    background: theme.palette.primary.main,\n    overflowX: 'hidden',\n  },\n  canvasBox: {\n    justifyContent: 'center',\n  },\n  canvas: {\n    outline: 'black 3px solid',\n    marginTop: '1rem',\n    display: 'flex'\n  },\n});\n \nexport default withStyles(useStyles)(PixelEditor);"]},"metadata":{},"sourceType":"module"}