{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/real-time-react/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { PixelEditor, Pencil } from '@curtishughes/pixel-editor';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.syncUpdates = () => {\n      const data = {\n        id: this.state.id\n      };\n      axios.post(\"/update-editor\", data).catch(console.error);\n    };\n\n    this.state = {\n      id: '',\n      editor: null\n    };\n    this.editorRef = React.createRef();\n    this.pusher = new Pusher(\"8367995d3f0fa627b261\", {\n      cluster: \"us3\",\n      forceTLS: true\n    });\n    this.channel = this.pusher.subscribe(\"editor\");\n  }\n\n  componentDidMount() {\n    if (this.editorRef.current) {\n      this.setState({\n        editor: new PixelEditor(this.editorRef.current, 64, 64, new Pencil('black'))\n      });\n    }\n\n    this.setState({\n      id: pushid()\n    });\n    this.channel.bind(\"code-update\", data => {\n      const {\n        id\n      } = this.state;\n      if (data.id === id) return;\n      this.setState({\n        editor: data.editor\n      });\n    });\n  }\n\n  render() {\n    const {\n      editor\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"canvas\", {\n      onClick: () => {\n        this.syncUpdates();\n      },\n      ref: this.editorRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.tool = new Pencil();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Eraser\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.tool = new Pencil('black');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Pencil\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.undo();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Undo\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.redo();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Redo\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/real-time-react/client/src/App.js"],"names":["React","Component","PixelEditor","Pencil","Pusher","pushid","axios","App","constructor","syncUpdates","data","id","state","post","catch","console","error","editor","editorRef","createRef","pusher","cluster","forceTLS","channel","subscribe","componentDidMount","current","setState","bind","render","tool","undo","redo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { PixelEditor, Pencil } from '@curtishughes/pixel-editor';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\n \nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n          id: '',\n          editor : null,\n        };\n        this.editorRef = React.createRef();\n        this.pusher = new Pusher(\"8367995d3f0fa627b261\", {\n          cluster: \"us3\",\n          forceTLS: true\n        });\n        this.channel = this.pusher.subscribe(\"editor\");\n    }\n    componentDidMount() {\n        if (this.editorRef.current) {\n            this.setState({\n                editor : new PixelEditor(this.editorRef.current, 64, 64, new Pencil('black')),\n            }) \n        }\n        this.setState({\n          id: pushid(),\n        });\n    \n        this.channel.bind(\"code-update\", data => {\n          const { id } = this.state;\n          if (data.id === id) return;\n\n          this.setState({\n            editor: data.editor,\n          });\n        });\n    }\n    \n    syncUpdates = () => {\n        const data = { \n            id: this.state.id,\n        };\n        axios\n        .post(\"/update-editor\", data)\n        .catch(console.error);\n    };\n\n    render() {\n        const { editor } = this.state;\n        return (\n            <>\n            <canvas onClick={() => {\n                \n                 this.syncUpdates();\n              }} ref={this.editorRef} />\n                <button onClick={() => { if (editor) editor.tool = new Pencil() }}>Eraser</button>\n                <button onClick={() => { if (editor) editor.tool = new Pencil('black') }}>Pencil</button>\n                <button onClick={() => { if (editor) editor.undo() }}>Undo</button>\n                <button onClick={() => { if (editor) editor.redo() }}>Redo</button>\n            </>\n        );\n    }\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}