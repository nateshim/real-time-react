{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/pixit/client/src/UserHome.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { Box, Typography, Avatar } from '@material-ui/core';\nimport { withStyles, createStyles } from '@material-ui/styles';\nimport fox from './static/fox.png';\nimport racoon from './static/racoon.png';\nimport snake from './static/snake.png';\n\nconst UserHome = props => {\n  const classes = props.classes;\n  const user_id = new URLSearchParams(useLocation().search).get('id');\n  const [userSprite, setUserSprite] = useState(0);\n  const history = useHistory();\n  const spritePaths = {\n    0: racoon,\n    1: snake,\n    2: fox\n  };\n  useEffect(() => {\n    const getUser = async () => {\n      var _response;\n\n      let response;\n\n      try {\n        console.log(\"This is the user id\" + user_id);\n        response = await axios.post('/api/user', JSON.stringify({\n          user_id\n        }), {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      if (response) {\n        console.log(response.data.user.spriteid);\n        setUserSprite(response.data.user.spriteid);\n      }\n\n      if ((_response = response) === null || _response === void 0 ? void 0 : _response.data.path) window.location.href = response.data.path;else history.push(`/user/?id=${user_id}`);\n    };\n\n    getUser();\n  }, []);\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.backgroundContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: spritePaths[userSprite],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst useStyles = theme => createStyles({\n  backgroundContainer: {\n    backgroundSize: 'cover',\n    background: theme.palette.primary.main,\n    overflowX: 'hidden'\n  },\n  section: {\n    display: 'flex'\n  },\n  logo: {\n    padding: '1rem'\n  }\n});\n\nexport default withStyles(useStyles)(UserHome);","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/pixit/client/src/UserHome.js"],"names":["React","useEffect","useState","useLocation","useHistory","axios","Box","Typography","Avatar","withStyles","createStyles","fox","racoon","snake","UserHome","props","classes","user_id","URLSearchParams","search","get","userSprite","setUserSprite","history","spritePaths","getUser","response","console","log","post","JSON","stringify","headers","err","data","user","spriteid","path","window","location","href","push","backgroundContainer","useStyles","theme","backgroundSize","background","palette","primary","main","overflowX","section","display","logo","padding"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useLocation, useHistory} from 'react-router-dom';\nimport axios from 'axios';\nimport {\n    Box,\n    Typography,\n    Avatar,\n} from '@material-ui/core';\nimport {withStyles, createStyles} from '@material-ui/styles';\nimport fox from './static/fox.png';\nimport racoon from './static/racoon.png';\nimport snake from './static/snake.png';\nconst UserHome = (props) => {\n    const classes = props.classes;\n    const user_id = new URLSearchParams(useLocation().search).get('id');\n    const [userSprite, setUserSprite] = useState(0);\n    const history = useHistory();\n    const spritePaths = {\n        0 : racoon,\n        1 : snake,\n        2 : fox,\n    }\n    useEffect(() => {\n        const getUser = async() => {\n            let response;\n            try {\n                console.log(\"This is the user id\" + user_id);\n                response = await axios.post('/api/user', JSON.stringify({user_id}), {\n                    headers: {'Content-Type' : 'application/json'}\n                });\n            } catch (err) {\n                console.log(err);\n            }\n            if (response) { \n                console.log(response.data.user.spriteid);\n                setUserSprite(response.data.user.spriteid);\n                \n            }\n            if (response?.data.path) window.location.href = response.data.path;\n            else history.push(`/user/?id=${user_id}`)\n        } \n        getUser();\n    }, [])\n    return (\n        <Box className={classes.backgroundContainer}>\n            <Avatar src = {spritePaths[userSprite]}/>\n        </Box>\n    );\n}\n\nconst useStyles = (theme) => createStyles({\n   backgroundContainer: {\n       backgroundSize: 'cover',\n       background: theme.palette.primary.main,\n       overflowX: 'hidden',\n    },\n   section: {\n       display: 'flex',\n    },\n   logo: {\n       padding: '1rem',\n    }\n});\n\nexport default withStyles(useStyles)(UserHome);"]},"metadata":{},"sourceType":"module"}