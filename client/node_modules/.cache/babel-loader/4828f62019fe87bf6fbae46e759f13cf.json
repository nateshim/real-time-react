{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/pixit/client/src/auth/Signup.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Navigation from '../Navigation';\nimport { useHistory } from 'react-router-dom';\nimport { withStyles, createStyles } from '@material-ui/styles';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { Button, Container, Box, Typography } from '@material-ui/core';\n\nconst Signup = props => {\n  const classes = props.classes;\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [verifypassword, setVerifyPassword] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    let response;\n\n    try {\n      response = await axios.post('/auth/signup', JSON.stringify({\n        username: username,\n        email,\n        password\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    history.push('/login');\n  };\n\n  const createUser = () => {\n    fetch('http://localhost:5000/auth/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password\n      })\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      alert(data);\n    });\n  };\n\n  const handleUsernameChange = event => setUsername(event.target.value);\n\n  const handleEmailChange = event => setEmail(event.target.value);\n\n  const handlePasswordChange = event => setPassword(event.target.value);\n\n  const handleVerifyPasswordChange = event => setVerifyPassword(event.target.value);\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: handleSubmit,\n    className: classes.formWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    id: \"username\",\n    label: \"Username\",\n    className: classes.textBox,\n    onChange: handleUsernameChange,\n    name: \"username\",\n    validators: ['required'],\n    errorMessages: ['this field is required'],\n    variant: \"outlined\",\n    size: \"small\",\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    id: \"email\",\n    label: \"Email address\",\n    className: classes.textBox,\n    onChange: handleEmailChange,\n    name: \"email\",\n    type: \"email\",\n    validators: ['required', 'isEmail'],\n    errorMessages: ['this field is required', 'email is not valid'],\n    variant: \"outlined\",\n    size: \"small\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    id: \"password\",\n    label: \"Password\",\n    className: classes.textBox,\n    onChange: handlePasswordChange,\n    name: \"password\",\n    type: \"password\",\n    validators: ['required'],\n    errorMessages: ['this field is required'],\n    variant: \"outlined\",\n    size: \"small\",\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    id: \"verifypassword\",\n    label: \"Verify Password\",\n    className: classes.textBox,\n    onChange: handleVerifyPasswordChange,\n    name: \"verifypassword\",\n    type: \"password\",\n    validators: ['required'],\n    errorMessages: ['this field is required'],\n    variant: \"outlined\",\n    size: \"small\",\n    value: verifypassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"Create account\"))));\n};\n\nconst useStyles = theme => createStyles({\n  formWrapper: {\n    width: '350px',\n    display: 'flex',\n    flexDirection: 'column',\n    '& > *': {\n      marginBottom: '1rem'\n    }\n  },\n  textBox: {\n    display: 'flex'\n  }\n});\n\nexport default withStyles(useStyles)(Signup);","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/pixit/client/src/auth/Signup.js"],"names":["React","useState","axios","Navigation","useHistory","withStyles","createStyles","ValidatorForm","TextValidator","Button","Container","Box","Typography","Signup","props","classes","username","setUsername","email","setEmail","password","setPassword","verifypassword","setVerifyPassword","history","handleSubmit","event","preventDefault","response","post","JSON","stringify","headers","err","console","log","push","createUser","fetch","method","body","then","text","data","alert","handleUsernameChange","target","value","handleEmailChange","handlePasswordChange","handleVerifyPasswordChange","formWrapper","textBox","useStyles","theme","width","display","flexDirection","marginBottom"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport Navigation from '../Navigation';\nimport {useHistory} from 'react-router-dom';\nimport {withStyles, createStyles} from '@material-ui/styles';\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport {\n    Button,\n    Container,\n    Box,\n    Typography,\n} from '@material-ui/core';\n\nconst Signup = (props) => {\n    const classes = props.classes;\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [verifypassword, setVerifyPassword] = useState('');\n    const history = useHistory();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        let response;\n        try {\n            response = await axios.post('/auth/signup', JSON.stringify({username: username, email, password}), {\n                headers: {'Content-Type' : 'application/json'}\n            });\n        } catch (err) {\n            console.log(err);\n        }\n        history.push('/login');\n    }\n\n    const createUser = () => {\n        fetch('http://localhost:5000/auth/signup', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({username, email, password}),\n        })\n        .then(response => {\n            return response.text();\n        })\n        .then(data => {\n            alert(data);\n        })\n        \n    }\n    \n    const handleUsernameChange = (event) => setUsername(event.target.value);\n    const handleEmailChange = (event) => setEmail(event.target.value);\n    const handlePasswordChange = (event) => setPassword(event.target.value);\n    const handleVerifyPasswordChange = (event) => setVerifyPassword(event.target.value);\n        \n    return(\n        <Box>\n            <Navigation/>\n            <Container maxWidth=\"md\">\n                <ValidatorForm\n                    onSubmit={handleSubmit}\n                    className={classes.formWrapper}\n                >\n                    <TextValidator\n                        id=\"username\"\n                        label=\"Username\"\n                        className={classes.textBox}\n                        onChange={handleUsernameChange}\n                        name=\"username\"\n                        validators={['required']}\n                        errorMessages={['this field is required']}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        value={username}\n                    />\n                    <TextValidator\n                        id=\"email\"\n                        label=\"Email address\"\n                        className={classes.textBox}\n                        onChange={handleEmailChange}\n                        name=\"email\"\n                        type=\"email\"\n                        validators={['required', 'isEmail']}\n                        errorMessages={['this field is required', 'email is not valid']}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        value={email}\n                    />\n                    <TextValidator\n                        id=\"password\"\n                        label=\"Password\"\n                        className={classes.textBox}\n                        onChange={handlePasswordChange}\n                        name=\"password\"\n                        type=\"password\"\n                        validators={['required']}\n                        errorMessages={['this field is required']}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        value={password}\n                    />\n                    <TextValidator\n                        id=\"verifypassword\"\n                        label=\"Verify Password\"\n                        className={classes.textBox}\n                        onChange={handleVerifyPasswordChange}\n                        name=\"verifypassword\"\n                        type=\"password\"\n                        validators={['required']}\n                        errorMessages={['this field is required']}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        value={verifypassword}\n                    />\n                    <Button type=\"submit\">Create account</Button>\n                </ValidatorForm>\n            </Container>\n        </Box>\n    )\n}\n\nconst useStyles = (theme) => createStyles({\n    formWrapper: {\n        width: '350px',\n        display: 'flex',\n        flexDirection: 'column',\n        '& > *': {\n            marginBottom: '1rem',\n        },\n    },\n    textBox: {\n        display: 'flex',\n    }\n});\n\nexport default withStyles(useStyles)(Signup);"]},"metadata":{},"sourceType":"module"}