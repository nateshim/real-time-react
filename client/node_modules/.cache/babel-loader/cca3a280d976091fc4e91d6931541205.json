{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/real-time-react/client/src/App.js\";\nimport React, { Component } from 'react';\nimport PixelEditor from './PixelEditor';\nimport PixelCollection from './PixelCollection';\nimport Pencil from './tools/Pencil';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.runCode = () => {\n      var _this$editorRef$curre;\n\n      console.log(this.editorRef.current);\n      const document = (_this$editorRef$curre = this.editorRef.current) === null || _this$editorRef$curre === void 0 ? void 0 : _this$editorRef$curre.contentDocument;\n    };\n\n    this.syncUpdates = () => {\n      const data = {\n        id: this.state.id,\n        canvas: this.censor(this.state.editor._canvas),\n        pixels: this.state.editor.pixels\n      };\n      axios.post(\"/update-editor\", data).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      id: '',\n      editor: null\n    };\n    this.editorRef = React.createRef();\n    this.pusher = new Pusher(\"8367995d3f0fa627b261\", {\n      cluster: \"us3\",\n      forceTLS: true\n    });\n    this.channel = this.pusher.subscribe(\"editor\");\n  }\n\n  censor(censor) {\n    var i = 0;\n    return function (key, value) {\n      if (i !== 0 && typeof censor === 'object' && typeof value === 'object' && censor === value) return '[Circular]';\n      if (i >= 29) // seems to be a harded maximum of 30 serialized objects?\n        return '[Unknown]';\n      ++i; // so we know we aren't using the original object anymore\n\n      return value;\n    };\n  }\n\n  componentDidUpdate() {\n    this.runCode();\n  }\n\n  componentDidMount() {\n    if (this.editorRef.current) {\n      this.setState({\n        editor: new PixelEditor(this.editorRef.current, 64, 64, new Pencil('black'))\n      });\n    }\n\n    this.setState({\n      id: pushid()\n    });\n    this.channel.bind(\"code-update\", data => {\n      const {\n        id\n      } = this.state;\n      if (data.id === id) this.setState({\n        editor: {\n          _pixels: new PixelCollection(64)\n        }\n      });\n      this.setState({\n        editor: {\n          _canvas: data.canvas,\n          _pixels: data.pixels\n        }\n      });\n      console.log(this.state.editor._pixels);\n    });\n  }\n\n  render() {\n    const {\n      editor\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"canvas\", {\n      onClick: () => {\n        this.syncUpdates();\n      },\n      ref: this.editorRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.tool = new Pencil();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Eraser\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.tool = new Pencil('black');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Pencil\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.undo();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Undo\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.redo();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Redo\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/real-time-react/client/src/App.js"],"names":["React","Component","PixelEditor","PixelCollection","Pencil","Pusher","pushid","axios","App","constructor","runCode","console","log","editorRef","current","document","contentDocument","syncUpdates","data","id","state","canvas","censor","editor","_canvas","pixels","post","catch","err","createRef","pusher","cluster","forceTLS","channel","subscribe","i","key","value","componentDidUpdate","componentDidMount","setState","bind","_pixels","render","tool","undo","redo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PixelEditor from './PixelEditor';\nimport PixelCollection from './PixelCollection';\nimport Pencil from './tools/Pencil';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\n \nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n          id: '',\n          editor : null,\n        };\n        this.editorRef = React.createRef();\n        this.pusher = new Pusher(\"8367995d3f0fa627b261\", {\n          cluster: \"us3\",\n          forceTLS: true\n        });\n        this.channel = this.pusher.subscribe(\"editor\");\n    }\n    censor(censor) {\n      var i = 0;\n    \n      return function(key, value) {\n        if(i !== 0 && typeof(censor) === 'object' && typeof(value) === 'object' && censor === value) \n          return '[Circular]'; \n    \n        if(i >= 29) // seems to be a harded maximum of 30 serialized objects?\n          return '[Unknown]';\n    \n        ++i; // so we know we aren't using the original object anymore\n    \n        return value;  \n      }\n    }\n    componentDidUpdate() {\n      this.runCode();\n    }\n    runCode = () => {\n      console.log(this.editorRef.current)\n      const document = this.editorRef.current?.contentDocument;\n    };\n    componentDidMount() {\n        if (this.editorRef.current) {\n            this.setState({\n                editor : new PixelEditor(this.editorRef.current, 64, 64, new Pencil('black')),\n            }) \n        }\n        this.setState({\n          id: pushid(),\n        });\n    \n        this.channel.bind(\"code-update\", data => {\n          const { id } = this.state;\n          if (data.id === id) this.setState({editor: {_pixels : new PixelCollection(64)}});\n          this.setState({\n            editor: {\n              _canvas : data.canvas,\n              _pixels : data.pixels,\n            },\n          });\n          console.log(this.state.editor._pixels);\n        });\n    }\n    \n    syncUpdates = () => {\n      const data = { \n          id: this.state.id,\n          canvas: this.censor(this.state.editor._canvas),\n          pixels: this.state.editor.pixels,\n      };\n        axios\n        .post(\"/update-editor\", data)\n        .catch(err => {\n          console.log(err);\n        });\n    };\n\n    render() {\n        const { editor } = this.state;\n        return (\n            <>\n            <canvas onClick={() => {\n                this.syncUpdates();\n              }} ref={this.editorRef} />\n                <button onClick={() => { if (editor) editor.tool = new Pencil() }}>Eraser</button>\n                <button onClick={() => { if (editor) editor.tool = new Pencil('black') }}>Pencil</button>\n                <button onClick={() => { if (editor) editor.undo() }}>Undo</button>\n                <button onClick={() => { if (editor) editor.redo() }}>Redo</button>\n            </>\n        );\n    }\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}