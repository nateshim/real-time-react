{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/pixit/client/src/PixelEditor.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Canvas from './Canvas';\nimport Pencil from './tools/Pencil';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\nimport * as util from 'util'; // has no default export\n\nfunction PixelEditor() {\n  const [id, setId] = useState('');\n  const [editor, setEditor] = useState(null);\n  const editorRef = useRef(null);\n  const pusher = new Pusher(\"8367995d3f0fa627b261\", {\n    cluster: \"us3\",\n    forceTLS: true\n  });\n  const channel = pusher.subscribe(\"editor\");\n  useEffect(() => {\n    if (editorRef.current) {\n      setEditor(new Canvas(editorRef.current, 64, 64, new Pencil('black')));\n    }\n\n    setId(pushid);\n    channel.bind(\"code-update\", data => {\n      if (data.id === id) return;\n      console.log(data.editor); // data.editor.clear();\n      // data.editor.set(data.pixels);\n    });\n  }, []);\n\n  const syncUpdates = () => {\n    console.log(editor);\n\n    const getCircularReplacer = () => {\n      const seen = new WeakSet();\n      return (key, value) => {\n        if (typeof value === \"object\" && value !== null) {\n          if (seen.has(value)) {\n            return;\n          }\n\n          seen.add(value);\n        }\n\n        return value;\n      };\n    };\n\n    const data = {\n      editor: JSON.stringify(editor, getCircularReplacer()),\n      id: id,\n      pixels: editor.pixels\n    };\n    axios.post(\"/update-editor\", data).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    onClick: () => {\n      syncUpdates();\n    },\n    ref: editorRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.tool = new Pencil();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Eraser\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.tool = new Pencil('black');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Pencil\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.undo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Undo\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.redo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Redo\"));\n}\n\nexport default PixelEditor;","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/pixit/client/src/PixelEditor.js"],"names":["React","useState","useEffect","useRef","Canvas","Pencil","Pusher","pushid","axios","util","PixelEditor","id","setId","editor","setEditor","editorRef","pusher","cluster","forceTLS","channel","subscribe","current","bind","data","console","log","syncUpdates","getCircularReplacer","seen","WeakSet","key","value","has","add","JSON","stringify","pixels","post","catch","err","tool","undo","redo"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport Canvas from './Canvas';\nimport Pencil from './tools/Pencil';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\nimport * as util from 'util' // has no default export\n\n \nfunction PixelEditor() {\n  const [id, setId] = useState('');\n  const [editor, setEditor] = useState(null);\n  const editorRef = useRef(null);\n  const pusher = new Pusher(\"8367995d3f0fa627b261\", {\n    cluster: \"us3\",\n    forceTLS: true\n  });\n  const channel = pusher.subscribe(\"editor\");\n\n  useEffect(() => {\n    if (editorRef.current) {\n      setEditor(new Canvas(editorRef.current, 64, 64, new Pencil('black')));\n    }\n    setId(pushid);\n    channel.bind(\"code-update\", data => {\n      if (data.id === id) return;\n      console.log(data.editor)\n      // data.editor.clear();\n      // data.editor.set(data.pixels);\n    });\n  }, []);\n    \n  const syncUpdates = () => {\n    console.log(editor)\n    const getCircularReplacer = () => {\n      const seen = new WeakSet();\n      return (key, value) => {\n        if (typeof value === \"object\" && value !== null) {\n          if (seen.has(value)) {\n            return;\n          }\n          seen.add(value);\n        }\n        return value;\n      };\n    };\n    const data = { \n      editor:  JSON.stringify(editor, getCircularReplacer()),\n      id: id,\n      pixels: editor.pixels,\n    };\n    axios\n    .post(\"/update-editor\", data)\n    .catch(err => {\n      console.log(err);\n    });\n  };\n\n  return (\n    <div>\n      <canvas onClick={() => {\n        syncUpdates();\n        }} ref={editorRef} />\n        <button onClick={() => { if (editor) editor.tool = new Pencil() }}>Eraser</button>\n        <button onClick={() => { if (editor) editor.tool = new Pencil('black') }}>Pencil</button>\n        <button onClick={() => { if (editor) editor.undo() }}>Undo</button>\n        <button onClick={() => { if (editor) editor.redo() }}>Redo</button>\n    </div>\n    );\n}\n \nexport default PixelEditor;"]},"metadata":{},"sourceType":"module"}