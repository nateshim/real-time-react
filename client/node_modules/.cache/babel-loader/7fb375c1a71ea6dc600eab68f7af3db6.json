{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/pixit/client/src/PixelEditor.js\";\nimport React, { useState, useEffect } from 'react';\nimport Canvas from './Canvas';\nimport Pencil from './tools/Pencil';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\n\nfunction PixelEditor() {\n  const [id, setId] = useState('');\n  const [editor, setEditor] = useState(null);\n  const editorRef = React.createRef();\n  const pusher = new Pusher(\"8367995d3f0fa627b261\", {\n    cluster: \"us3\",\n    forceTLS: true\n  });\n  const channel = pusher.subscribe(\"editor\");\n  useEffect(() => {\n    if (this.editorRef.current) {\n      this.setState({\n        editor: new Canvas(this.editorRef.current, 64, 64, new Pencil('black'))\n      });\n\n      if (localStorage.getItem('editorPixels') !== null) {\n        this.state.editor.set(localStorage.getItem('editorPixels'));\n      }\n    }\n\n    this.setState({\n      id: pushid()\n    });\n    this.channel.bind(\"code-update\", data => {\n      const {\n        id\n      } = this.state;\n      if (data.id === id) return;\n      this.state.editor.clear();\n      this.state.editor.set(data.pixels);\n      localStorage.setItem('editorPixels', data.pixels);\n    });\n  });\n\n  syncUpdates = () => {\n    const data = {\n      id: this.state.id,\n      pixels: this.state.editor.pixels\n    };\n    axios.post(\"/update-editor\", data).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    onClick: () => {\n      syncUpdates();\n    },\n    ref: editorRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.tool = new Pencil();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Eraser\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.tool = new Pencil('black');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Pencil\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.undo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Undo\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.redo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Redo\"));\n}\n\nexport default PixelEditor;","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/pixit/client/src/PixelEditor.js"],"names":["React","useState","useEffect","Canvas","Pencil","Pusher","pushid","axios","PixelEditor","id","setId","editor","setEditor","editorRef","createRef","pusher","cluster","forceTLS","channel","subscribe","current","setState","localStorage","getItem","state","set","bind","data","clear","pixels","setItem","syncUpdates","post","catch","err","console","log","tool","undo","redo"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Canvas from './Canvas';\nimport Pencil from './tools/Pencil';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\n \nfunction PixelEditor() {\n  const [id, setId] = useState('');\n  const [editor, setEditor] = useState(null);\n  const editorRef = React.createRef();\n  const pusher = new Pusher(\"8367995d3f0fa627b261\", {\n    cluster: \"us3\",\n    forceTLS: true\n  });\n  const channel = pusher.subscribe(\"editor\");\n\n  useEffect(() => {\n      if (this.editorRef.current) {\n        this.setState({\n          editor : new Canvas(this.editorRef.current, 64, 64, new Pencil('black')),\n        });\n        if (localStorage.getItem('editorPixels') !== null) {\n          this.state.editor.set(localStorage.getItem('editorPixels'));\n        } \n      }\n      this.setState({\n        id: pushid(),\n      });\n      this.channel.bind(\"code-update\", data => {\n        const { id } = this.state;\n        if (data.id === id) return;\n        this.state.editor.clear();\n        this.state.editor.set(data.pixels);\n        localStorage.setItem('editorPixels', data.pixels);\n      });\n  });\n    \n  syncUpdates = () => {\n    const data = { \n      id: this.state.id,\n      pixels: this.state.editor.pixels,\n    };\n    axios\n    .post(\"/update-editor\", data)\n    .catch(err => {\n      console.log(err);\n    });\n  };\n\n  return (\n    <div>\n      <canvas onClick={() => {\n        syncUpdates();\n        }} ref={editorRef} />\n        <button onClick={() => { if (editor) editor.tool = new Pencil() }}>Eraser</button>\n        <button onClick={() => { if (editor) editor.tool = new Pencil('black') }}>Pencil</button>\n        <button onClick={() => { if (editor) editor.undo() }}>Undo</button>\n        <button onClick={() => { if (editor) editor.redo() }}>Redo</button>\n    </div>\n    );\n}\n \nexport default PixelEditor;"]},"metadata":{},"sourceType":"module"}