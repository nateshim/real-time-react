{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/pixit/client/src/PixelEditor.js\";\nimport React, { useState, useEffect } from 'react';\nimport Canvas from './Canvas';\nimport Pencil from './tools/Pencil';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\n\nfunction PixelEditor() {\n  const [id, setId] = useState('');\n  const [editor, setEditor] = useState(null);\n  const editorRef = React.createRef();\n  const pusher = new Pusher(\"8367995d3f0fa627b261\", {\n    cluster: \"us3\",\n    forceTLS: true\n  });\n  const channel = pusher.subscribe(\"editor\");\n  useEffect(() => {\n    if (editorRef.current) {\n      setEditor(new Canvas(editorRef.current, 64, 64, new Pencil('black')));\n    }\n\n    setId(pushid);\n    channel.bind(\"code-update\", data => {\n      if (data.id === id) return;\n      editor.set(data.pixels);\n    });\n  });\n\n  const syncUpdates = () => {\n    const data = {\n      id: id,\n      pixels: editor.pixels\n    };\n    axios.post(\"/update-editor\", data).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    onClick: () => {\n      syncUpdates();\n    },\n    ref: editorRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.tool = new Pencil();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Eraser\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.tool = new Pencil('black');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Pencil\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.undo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Undo\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.redo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Redo\"));\n}\n\nexport default PixelEditor;","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/pixit/client/src/PixelEditor.js"],"names":["React","useState","useEffect","Canvas","Pencil","Pusher","pushid","axios","PixelEditor","id","setId","editor","setEditor","editorRef","createRef","pusher","cluster","forceTLS","channel","subscribe","current","bind","data","set","pixels","syncUpdates","post","catch","err","console","log","tool","undo","redo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,GAAuB;AACrB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcT,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMY,SAAS,GAAGb,KAAK,CAACc,SAAN,EAAlB;AACA,QAAMC,MAAM,GAAG,IAAIV,MAAJ,CAAW,sBAAX,EAAmC;AAChDW,IAAAA,OAAO,EAAE,KADuC;AAEhDC,IAAAA,QAAQ,EAAE;AAFsC,GAAnC,CAAf;AAIA,QAAMC,OAAO,GAAGH,MAAM,CAACI,SAAP,CAAiB,QAAjB,CAAhB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,SAAS,CAACO,OAAd,EAAuB;AACrBR,MAAAA,SAAS,CAAC,IAAIT,MAAJ,CAAWU,SAAS,CAACO,OAArB,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,IAAIhB,MAAJ,CAAW,OAAX,CAAtC,CAAD,CAAT;AACD;;AACDM,IAAAA,KAAK,CAACJ,MAAD,CAAL;AACAY,IAAAA,OAAO,CAACG,IAAR,CAAa,aAAb,EAA4BC,IAAI,IAAI;AAClC,UAAIA,IAAI,CAACb,EAAL,KAAYA,EAAhB,EAAoB;AACpBE,MAAAA,MAAM,CAACY,GAAP,CAAWD,IAAI,CAACE,MAAhB;AACD,KAHD;AAIH,GATQ,CAAT;;AAWA,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMH,IAAI,GAAG;AACXb,MAAAA,EAAE,EAAEA,EADO;AAEXe,MAAAA,MAAM,EAAEb,MAAM,CAACa;AAFJ,KAAb;AAIAjB,IAAAA,KAAK,CACJmB,IADD,CACM,gBADN,EACwBJ,IADxB,EAECK,KAFD,CAEOC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAJD;AAKD,GAVD;;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAM;AACrBH,MAAAA,WAAW;AACV,KAFH;AAEK,IAAA,GAAG,EAAEZ,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAII;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAE,UAAIF,MAAJ,EAAYA,MAAM,CAACoB,IAAP,GAAc,IAAI3B,MAAJ,EAAd;AAA4B,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAE,UAAIO,MAAJ,EAAYA,MAAM,CAACoB,IAAP,GAAc,IAAI3B,MAAJ,CAAW,OAAX,CAAd;AAAmC,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAE,UAAIO,MAAJ,EAAYA,MAAM,CAACqB,IAAP;AAAe,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAE,UAAIrB,MAAJ,EAAYA,MAAM,CAACsB,IAAP;AAAe,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CADF;AAWD;;AAED,eAAezB,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Canvas from './Canvas';\nimport Pencil from './tools/Pencil';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\n \nfunction PixelEditor() {\n  const [id, setId] = useState('');\n  const [editor, setEditor] = useState(null);\n  const editorRef = React.createRef();\n  const pusher = new Pusher(\"8367995d3f0fa627b261\", {\n    cluster: \"us3\",\n    forceTLS: true\n  });\n  const channel = pusher.subscribe(\"editor\");\n\n  useEffect(() => {\n      if (editorRef.current) {\n        setEditor(new Canvas(editorRef.current, 64, 64, new Pencil('black')));\n      }\n      setId(pushid);\n      channel.bind(\"code-update\", data => {\n        if (data.id === id) return;\n        editor.set(data.pixels);\n      });\n  });\n    \n  const syncUpdates = () => {\n    const data = { \n      id: id,\n      pixels: editor.pixels,\n    };\n    axios\n    .post(\"/update-editor\", data)\n    .catch(err => {\n      console.log(err);\n    });\n  };\n\n  return (\n    <div>\n      <canvas onClick={() => {\n        syncUpdates();\n        }} ref={editorRef} />\n        <button onClick={() => { if (editor) editor.tool = new Pencil() }}>Eraser</button>\n        <button onClick={() => { if (editor) editor.tool = new Pencil('black') }}>Pencil</button>\n        <button onClick={() => { if (editor) editor.undo() }}>Undo</button>\n        <button onClick={() => { if (editor) editor.redo() }}>Redo</button>\n    </div>\n    );\n}\n \nexport default PixelEditor;"]},"metadata":{},"sourceType":"module"}