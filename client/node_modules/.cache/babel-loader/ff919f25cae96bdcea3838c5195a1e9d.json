{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/real-time-react/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { PixelEditor, Pencil } from '@curtishughes/pixel-editor';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\nimport { parse, stringify } from 'flatted';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.syncUpdates = () => {\n      const data = {\n        id: this.state.id,\n        editorRef: stringify(this.state.editorRef)\n      };\n      axios.post(\"/update-editor\", data).catch(console.error);\n    };\n\n    this.state = {\n      id: '',\n      editor: null,\n      editorRef: React.createRef()\n    };\n    this.pusher = new Pusher(\"8367995d3f0fa627b261\", {\n      cluster: \"us3\",\n      forceTLS: true\n    });\n    this.channel = this.pusher.subscribe(\"editor\");\n  }\n\n  componentDidMount() {\n    if (this.state.editorRef.current) {\n      this.setState({\n        editor: new PixelEditor(this.state.editorRef.current, 64, 64, new Pencil('black'))\n      });\n    }\n\n    this.setState({\n      id: pushid()\n    });\n    this.channel.bind(\"code-update\", data => {\n      console.log(\"hello\");\n      const {\n        id\n      } = this.state;\n      if (data.id === id) return;\n      console.log(\"o?\");\n      this.setState({\n        editorRef: JSON.parse(data.editorRef)\n      });\n    });\n  }\n\n  render() {\n    const {\n      editor,\n      editorRef\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"canvas\", {\n      onClick: editorRef => {\n        editorRef.persist();\n        this.setState({\n          editorRef\n        }, () => this.syncUpdates());\n      },\n      ref: editorRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.tool = new Pencil();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Eraser\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.tool = new Pencil('black');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Pencil\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.undo();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"Undo\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (editor) editor.redo();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"Redo\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/real-time-react/client/src/App.js"],"names":["React","Component","PixelEditor","Pencil","Pusher","pushid","axios","parse","stringify","App","constructor","syncUpdates","data","id","state","editorRef","post","catch","console","error","editor","createRef","pusher","cluster","forceTLS","channel","subscribe","componentDidMount","current","setState","bind","log","JSON","render","persist","tool","undo","redo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,4BAApC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,SAA/B;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AACxBS,EAAAA,WAAW,GAAG;AACV;;AADU,SAkCdC,WAlCc,GAkCA,MAAM;AAClB,YAAMC,IAAI,GAAG;AACTC,QAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWD,EADN;AAETE,QAAAA,SAAS,EAAEP,SAAS,CAAC,KAAKM,KAAL,CAAWC,SAAZ;AAFX,OAAb;AAIET,MAAAA,KAAK,CACJU,IADD,CACM,gBADN,EACwBJ,IADxB,EAECK,KAFD,CAEOC,OAAO,CAACC,KAFf;AAGH,KA1Ca;;AAEV,SAAKL,KAAL,GAAa;AACXD,MAAAA,EAAE,EAAE,EADO;AAEXO,MAAAA,MAAM,EAAG,IAFE;AAGXL,MAAAA,SAAS,EAAGf,KAAK,CAACqB,SAAN;AAHD,KAAb;AAKA,SAAKC,MAAL,GAAc,IAAIlB,MAAJ,CAAW,sBAAX,EAAmC;AAC/CmB,MAAAA,OAAO,EAAE,KADsC;AAE/CC,MAAAA,QAAQ,EAAE;AAFqC,KAAnC,CAAd;AAIA,SAAKC,OAAL,GAAe,KAAKH,MAAL,CAAYI,SAAZ,CAAsB,QAAtB,CAAf;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKb,KAAL,CAAWC,SAAX,CAAqBa,OAAzB,EAAkC;AAC9B,WAAKC,QAAL,CAAc;AACVT,QAAAA,MAAM,EAAG,IAAIlB,WAAJ,CAAgB,KAAKY,KAAL,CAAWC,SAAX,CAAqBa,OAArC,EAA8C,EAA9C,EAAkD,EAAlD,EAAsD,IAAIzB,MAAJ,CAAW,OAAX,CAAtD;AADC,OAAd;AAGH;;AACD,SAAK0B,QAAL,CAAc;AACZhB,MAAAA,EAAE,EAAER,MAAM;AADE,KAAd;AAIA,SAAKoB,OAAL,CAAaK,IAAb,CAAkB,aAAlB,EAAiClB,IAAI,IAAI;AACrCM,MAAAA,OAAO,CAACa,GAAR,CAAY,OAAZ;AACF,YAAM;AAAElB,QAAAA;AAAF,UAAS,KAAKC,KAApB;AACA,UAAIF,IAAI,CAACC,EAAL,KAAYA,EAAhB,EAAoB;AAClBK,MAAAA,OAAO,CAACa,GAAR,CAAY,IAAZ;AACF,WAAKF,QAAL,CAAc;AACZd,QAAAA,SAAS,EAAEiB,IAAI,CAACzB,KAAL,CAAWK,IAAI,CAACG,SAAhB;AADC,OAAd;AAGD,KARD;AASH;;AAYDkB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA,MAAF;AAAUL,MAAAA;AAAV,QAAwB,KAAKD,KAAnC;AACA,wBACI,uDACA;AAAQ,MAAA,OAAO,EAAGC,SAAD,IAAe;AAC9BA,QAAAA,SAAS,CAACmB,OAAV;AACE,aAAKL,QAAL,CAAc;AAAEd,UAAAA;AAAF,SAAd,EAA6B,MAAM,KAAKJ,WAAL,EAAnC;AACD,OAHH;AAGK,MAAA,GAAG,EAAEI,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,YAAIK,MAAJ,EAAYA,MAAM,CAACe,IAAP,GAAc,IAAIhC,MAAJ,EAAd;AAA4B,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,YAAIiB,MAAJ,EAAYA,MAAM,CAACe,IAAP,GAAc,IAAIhC,MAAJ,CAAW,OAAX,CAAd;AAAmC,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,YAAIiB,MAAJ,EAAYA,MAAM,CAACgB,IAAP;AAAe,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,YAAIhB,MAAJ,EAAYA,MAAM,CAACiB,IAAP;AAAe,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,CADJ;AAYH;;AA3DuB;;AA8D5B,eAAe5B,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { PixelEditor, Pencil } from '@curtishughes/pixel-editor';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\nimport {parse, stringify} from 'flatted';\n \nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n          id: '',\n          editor : null,\n          editorRef : React.createRef(),\n        };\n        this.pusher = new Pusher(\"8367995d3f0fa627b261\", {\n          cluster: \"us3\",\n          forceTLS: true\n        });\n        this.channel = this.pusher.subscribe(\"editor\");\n    }\n    componentDidMount() {\n        if (this.state.editorRef.current) {\n            this.setState({\n                editor : new PixelEditor(this.state.editorRef.current, 64, 64, new Pencil('black')),\n            }) \n        }\n        this.setState({\n          id: pushid(),\n        });\n    \n        this.channel.bind(\"code-update\", data => {\n            console.log(\"hello\")\n          const { id } = this.state;\n          if (data.id === id) return;\n            console.log(\"o?\")\n          this.setState({\n            editorRef: JSON.parse(data.editorRef),\n          });\n        });\n    }\n    \n    syncUpdates = () => {\n      const data = { \n          id: this.state.id,\n          editorRef: stringify(this.state.editorRef),\n      };\n        axios\n        .post(\"/update-editor\", data)\n        .catch(console.error);\n    };\n\n    render() {\n        const { editor, editorRef } = this.state;\n        return (\n            <>\n            <canvas onClick={(editorRef) => {\n              editorRef.persist();\n                this.setState({ editorRef }, () => this.syncUpdates());\n              }} ref={editorRef} />\n                <button onClick={() => { if (editor) editor.tool = new Pencil() }}>Eraser</button>\n                <button onClick={() => { if (editor) editor.tool = new Pencil('black') }}>Pencil</button>\n                <button onClick={() => { if (editor) editor.undo() }}>Undo</button>\n                <button onClick={() => { if (editor) editor.redo() }}>Redo</button>\n            </>\n        );\n    }\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}