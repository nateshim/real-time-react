{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/pixit/client/src/UserNavigation.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { withStyles, createStyles } from '@material-ui/styles';\nimport axios from 'axios';\nimport { Box, Button, Container, Typography, Avatar, Menu, MenuItem } from '@material-ui/core';\nimport logo from './static/logo.png';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from './context/AuthContext';\nimport fox from './static/fox.png';\nimport racoon from './static/racoon.png';\nimport snake from './static/snake.png';\n\nconst UserNavigation = props => {\n  const classes = props.classes;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const user_id = new URLSearchParams(useLocation().search).get('id');\n  const [userSprite, setUserSprite] = useState(0);\n  const history = useHistory();\n  const spritePaths = {\n    0: racoon,\n    1: snake,\n    2: fox\n  };\n  const user = useContext(AuthContext);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      var _response;\n\n      let response;\n\n      try {\n        response = await axios.post('/api/user', JSON.stringify({\n          user_id\n        }), {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      if (response) {\n        setUserSprite(response.data.user.spriteid);\n      }\n\n      if ((_response = response) === null || _response === void 0 ? void 0 : _response.data.path) window.location.href = response.data.path;else history.push(`/user/?id=${user_id}`);\n    };\n\n    getUser();\n  }, []);\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.backgroundContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    to: '/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"logo\",\n    className: classes.logo,\n    src: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    className: classes.userAuth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    to: '/editor',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Start Pixeling\")), /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    \"aria-controls\": \"simple menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: spritePaths[userSprite],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Menu, {\n    classes: {\n      paper: classes.appBar\n    },\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    elevation: 0,\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Logout\")))));\n};\n\nconst useStyles = theme => createStyles({\n  appBar: {\n    backgroundColor: '#fff2f2'\n  },\n  backgroundContainer: {\n    display: 'flex',\n    [theme.breakpoints.down('xs')]: {\n      display: 'grid'\n    },\n    backgroundSize: 'cover',\n    background: theme.palette.primary.main,\n    overflowX: 'hidden',\n    borderBottom: `1px solid ${theme.palette.text.primary}`\n  },\n  logo: {\n    padding: '1rem'\n  },\n  userAuth: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  text: {\n    paddingLeft: '1rem',\n    paddingRight: '1rem'\n  }\n});\n\nexport default withStyles(useStyles)(UserNavigation);","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/pixit/client/src/UserNavigation.js"],"names":["React","useEffect","useContext","useState","useLocation","useHistory","withStyles","createStyles","axios","Box","Button","Container","Typography","Avatar","Menu","MenuItem","logo","Link","AuthContext","fox","racoon","snake","UserNavigation","props","classes","anchorEl","setAnchorEl","user_id","URLSearchParams","search","get","userSprite","setUserSprite","history","spritePaths","user","handleClick","event","currentTarget","handleClose","getUser","response","post","JSON","stringify","headers","err","console","log","data","spriteid","path","window","location","href","push","backgroundContainer","userAuth","text","paper","appBar","vertical","horizontal","Boolean","handleLogout","useStyles","theme","backgroundColor","display","breakpoints","down","backgroundSize","background","palette","primary","main","overflowX","borderBottom","padding","justifyContent","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import React, {useEffect, useContext, useState} from 'react';\nimport {useLocation, useHistory} from 'react-router-dom';\nimport {withStyles, createStyles} from '@material-ui/styles';\nimport axios from 'axios';\nimport {\n    Box,\n    Button,\n    Container,\n    Typography,\n    Avatar,\n    Menu,\n    MenuItem,\n} from '@material-ui/core';\nimport logo from './static/logo.png';\nimport {Link} from 'react-router-dom';\nimport {AuthContext} from './context/AuthContext';\nimport fox from './static/fox.png';\nimport racoon from './static/racoon.png';\nimport snake from './static/snake.png';\nconst UserNavigation = (props) => {\n    const classes = props.classes;\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const user_id = new URLSearchParams(useLocation().search).get('id');\n    const [userSprite, setUserSprite] = useState(0);\n    const history = useHistory();\n    const spritePaths = {\n        0 : racoon,\n        1 : snake,\n        2 : fox,\n    };\n    const user = useContext(AuthContext);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    useEffect(() => {\n        const getUser = async() => {\n            let response;\n            try {\n                response = await axios.post('/api/user', JSON.stringify({user_id}), {\n                    headers: {'Content-Type' : 'application/json'}\n                });\n            } catch (err) {\n                console.log(err);\n            }\n            if (response) { \n                setUserSprite(response.data.user.spriteid);\n            }\n            if (response?.data.path) window.location.href = response.data.path;\n            else history.push(`/user/?id=${user_id}`)\n        } \n        getUser();\n    }, [])\n    return (\n        <Box className={classes.backgroundContainer}>\n            <Button component={Link} to={'/'}>\n                <img alt=\"logo\" className={classes.logo} src={logo}/>\n            </Button>\n            <Container className={classes.userAuth}>\n                <Button component={Link} to={'/editor'}>\n                    <Typography className={classes.text}>\n                        Start Pixeling\n                    </Typography>\n                </Button>\n                <Button component={Link} aria-controls=\"simple menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                    <Avatar src = {spritePaths[userSprite]}/>\n                </Button>\n                <Menu\n                    classes={{paper: classes.appBar}}\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    elevation={0}\n                    getContentAnchorEl={null}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <MenuItem>\n                        <Button component={Link} onClick={handleLogout}>Logout</Button>\n                    </MenuItem>\n                </Menu>\n            </Container>\n        </Box>\n    );\n}\n\nconst useStyles = (theme) => createStyles({\n    appBar: {\n        backgroundColor: '#fff2f2',\n    },\n    backgroundContainer: {\n        display: 'flex',\n        [theme.breakpoints.down('xs')]: {\n            display: 'grid',\n        },\n        backgroundSize: 'cover',\n        background: theme.palette.primary.main,\n        overflowX: 'hidden',\n        borderBottom: `1px solid ${theme.palette.text.primary}`\n    },\n   logo: {\n        padding: '1rem',\n    },\n    userAuth: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    text: {\n       paddingLeft: '1rem',\n       paddingRight: '1rem',\n    }\n});\n\nexport default withStyles(useStyles)(UserNavigation);"]},"metadata":{},"sourceType":"module"}