{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/real-time-react/client/src/App.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport { PixelEditor, Pencil } from '@curtishughes/pixel-editor';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\n\nfunction App() {\n  const [id, setID] = useState('');\n  const pusher = new Pusher(\"8367995d3f0fa627b261\", {\n    cluster: \"us3\",\n    forceTLS: true\n  });\n  const channel = pusher.subscribe(\"editor\");\n\n  function syncUpdates() {\n    const data = { ...this.state\n    };\n    axios.post(\"/update-editor\", data).catch(console.error);\n  }\n\n  ;\n  const editorRef = useRef(null);\n  const [editor, setEditor] = useState();\n  useEffect(() => {\n    //componentDidMount\n    setID(pushid());\n    channel.bind(\"code-update\", data => {\n      const {\n        id\n      } = this.state;\n      if (data.id === id) return;\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"canvas\", {\n    onBeforeChange: html => {\n      this.setState({\n        html\n      }, () => syncUpdates());\n    },\n    ref: editorRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.tool = new Pencil();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Eraser\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.tool = new Pencil('black');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Pencil\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.undo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Undo\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (editor) editor.redo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Redo\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/real-time-react/client/src/App.js"],"names":["React","useRef","useEffect","useState","PixelEditor","Pencil","Controlled","CodeMirror","Pusher","pushid","axios","App","id","setID","pusher","cluster","forceTLS","channel","subscribe","syncUpdates","data","state","post","catch","console","error","editorRef","editor","setEditor","bind","html","setState","tool","undo","redo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,4BAApC;AACA,SAASC,UAAU,IAAIC,UAAvB,QAAyC,mBAAzC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AACX,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcV,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAMW,MAAM,GAAG,IAAIN,MAAJ,CAAW,sBAAX,EAAmC;AAChDO,IAAAA,OAAO,EAAE,KADuC;AAEhDC,IAAAA,QAAQ,EAAE;AAFsC,GAAnC,CAAf;AAKA,QAAMC,OAAO,GAAGH,MAAM,CAACI,SAAP,CAAiB,QAAjB,CAAhB;;AAEA,WAASC,WAAT,GAAuB;AACnB,UAAMC,IAAI,GAAG,EAAE,GAAG,KAAKC;AAAV,KAAb;AACAX,IAAAA,KAAK,CACJY,IADD,CACM,gBADN,EACwBF,IADxB,EAECG,KAFD,CAEOC,OAAO,CAACC,KAFf;AAGH;;AAAA;AAED,QAAMC,SAAS,GAAGzB,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,EAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAW,IAAAA,KAAK,CAACJ,MAAM,EAAP,CAAL;AACAQ,IAAAA,OAAO,CAACY,IAAR,CAAa,aAAb,EAA4BT,IAAI,IAAI;AAChC,YAAM;AAAER,QAAAA;AAAF,UAAS,KAAKS,KAApB;AACA,UAAID,IAAI,CAACR,EAAL,KAAYA,EAAhB,EAAoB;AACrB,KAHH;AAKH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI,uDACI;AAAQ,IAAA,cAAc,EAAGkB,IAAD,IAAU;AAC9B,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd,EAAwB,MAAMX,WAAW,EAAzC;AACD,KAFH;AAEK,IAAA,GAAG,EAAEO,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAE,UAAIC,MAAJ,EAAYA,MAAM,CAACK,IAAP,GAAc,IAAI3B,MAAJ,EAAd;AAA4B,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAE,UAAIsB,MAAJ,EAAYA,MAAM,CAACK,IAAP,GAAc,IAAI3B,MAAJ,CAAW,OAAX,CAAd;AAAmC,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAE,UAAIsB,MAAJ,EAAYA,MAAM,CAACM,IAAP;AAAe,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAE,UAAIN,MAAJ,EAAYA,MAAM,CAACO,IAAP;AAAe,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CADJ;AAWH;;AAED,eAAevB,GAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { PixelEditor, Pencil } from '@curtishughes/pixel-editor';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\n \nfunction App() {\n    const [id, setID] = useState('');\n    const pusher = new Pusher(\"8367995d3f0fa627b261\", {\n      cluster: \"us3\",\n      forceTLS: true\n    });\n\n    const channel = pusher.subscribe(\"editor\");\n\n    function syncUpdates() {\n        const data = { ...this.state };\n        axios\n        .post(\"/update-editor\", data)\n        .catch(console.error);\n    };\n\n    const editorRef = useRef(null);\n    const [editor, setEditor] = useState();\n \n    useEffect(() => {\n        //componentDidMount\n        setID(pushid());\n        channel.bind(\"code-update\", data => {\n            const { id } = this.state;\n            if (data.id === id) return;\n          });\n        \n    }, []);\n \n    return (\n        <>\n            <canvas onBeforeChange={(html) => {\n                this.setState({ html }, () => syncUpdates());\n              }} ref={editorRef} />\n            <button onClick={() => { if (editor) editor.tool = new Pencil() }}>Eraser</button>\n            <button onClick={() => { if (editor) editor.tool = new Pencil('black') }}>Pencil</button>\n            <button onClick={() => { if (editor) editor.undo() }}>Undo</button>\n            <button onClick={() => { if (editor) editor.redo() }}>Redo</button>\n        </>\n    );\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}