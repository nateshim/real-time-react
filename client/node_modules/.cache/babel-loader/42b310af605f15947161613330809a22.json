{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/pixit/client/src/UserNavigation.js\";\nimport React, { useContext } from 'react';\nimport { withStyles, createStyles } from '@material-ui/styles';\nimport { Box, Button, Container, Typography, Avatar } from '@material-ui/core';\nimport logo from './static/logo.png';\nimport { Link } from 'react-router-dom';\n\nconst UserNavigation = props => {\n  const classes = props.classes;\n  const user_id = new URLSearchParams(useLocation().search).get('id');\n  const [userSprite, setUserSprite] = useState(0);\n  const history = useHistory();\n  const spritePaths = {\n    0: racoon,\n    1: snake,\n    2: fox\n  };\n  const user = useContext(AuthContext);\n  useEffect(() => {\n    const getUser = async () => {\n      var _response;\n\n      let response;\n\n      try {\n        response = await axios.post('/api/user', JSON.stringify({\n          user_id\n        }), {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      if (response) {\n        setUserSprite(response.data.user.spriteid);\n      }\n\n      if ((_response = response) === null || _response === void 0 ? void 0 : _response.data.path) window.location.href = response.data.path;else history.push(`/user/?id=${user_id}`);\n    };\n\n    getUser();\n  }, []);\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.backgroundContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    to: '/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"logo\",\n    className: classes.logo,\n    src: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    className: classes.userAuth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    to: '/editor',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Start Pixeling\")), /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    to: '/login',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: spritePaths[userSprite],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst useStyles = theme => createStyles({\n  backgroundContainer: {\n    display: 'flex',\n    [theme.breakpoints.down('xs')]: {\n      display: 'grid'\n    },\n    backgroundSize: 'cover',\n    background: theme.palette.primary.main,\n    overflowX: 'hidden',\n    borderBottom: `1px solid ${theme.palette.text.primary}`\n  },\n  logo: {\n    padding: '1rem'\n  },\n  userAuth: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  text: {\n    paddingLeft: '1rem',\n    paddingRight: '1rem'\n  }\n});\n\nexport default withStyles(useStyles)(UserNavigation);","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/pixit/client/src/UserNavigation.js"],"names":["React","useContext","withStyles","createStyles","Box","Button","Container","Typography","Avatar","logo","Link","UserNavigation","props","classes","user_id","URLSearchParams","useLocation","search","get","userSprite","setUserSprite","useState","history","useHistory","spritePaths","racoon","snake","fox","user","AuthContext","useEffect","getUser","response","axios","post","JSON","stringify","headers","err","console","log","data","spriteid","path","window","location","href","push","backgroundContainer","userAuth","text","useStyles","theme","display","breakpoints","down","backgroundSize","background","palette","primary","main","overflowX","borderBottom","padding","justifyContent","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport {withStyles, createStyles} from '@material-ui/styles';\nimport {\n    Box,\n    Button,\n    Container,\n    Typography,\n    Avatar,\n} from '@material-ui/core';\nimport logo from './static/logo.png';\nimport {Link} from 'react-router-dom';\nconst UserNavigation = (props) => {\n    const classes = props.classes;\n    const user_id = new URLSearchParams(useLocation().search).get('id');\n    const [userSprite, setUserSprite] = useState(0);\n    const history = useHistory();\n    const spritePaths = {\n        0 : racoon,\n        1 : snake,\n        2 : fox,\n    }\n    const user = useContext(AuthContext);\n    useEffect(() => {\n        const getUser = async() => {\n            let response;\n            try {\n                response = await axios.post('/api/user', JSON.stringify({user_id}), {\n                    headers: {'Content-Type' : 'application/json'}\n                });\n            } catch (err) {\n                console.log(err);\n            }\n            if (response) { \n                setUserSprite(response.data.user.spriteid);\n            }\n            if (response?.data.path) window.location.href = response.data.path;\n            else history.push(`/user/?id=${user_id}`)\n        } \n        getUser();\n    }, [])\n    return (\n        <Box className={classes.backgroundContainer}>\n            <Button component={Link} to={'/'}>\n                <img alt=\"logo\" className={classes.logo} src={logo}/>\n            </Button>\n            <Container className={classes.userAuth}>\n                <Button component={Link} to={'/editor'}>\n                    <Typography className={classes.text}>\n                        Start Pixeling\n                    </Typography>\n                </Button>\n                <Button component={Link} to={'/login'}>\n                    <Avatar src = {spritePaths[userSprite]}/>\n                </Button>\n            </Container>\n        </Box>\n    );\n}\n\nconst useStyles = (theme) => createStyles({\n    backgroundContainer: {\n        display: 'flex',\n        [theme.breakpoints.down('xs')]: {\n            display: 'grid',\n        },\n        backgroundSize: 'cover',\n        background: theme.palette.primary.main,\n        overflowX: 'hidden',\n        borderBottom: `1px solid ${theme.palette.text.primary}`\n    },\n   logo: {\n        padding: '1rem',\n    },\n    userAuth: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    text: {\n       paddingLeft: '1rem',\n       paddingRight: '1rem',\n    }\n});\n\nexport default withStyles(useStyles)(UserNavigation);"]},"metadata":{},"sourceType":"module"}